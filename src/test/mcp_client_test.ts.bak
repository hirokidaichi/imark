import { Client } from "@modelcontextprotocol/sdk/client/index.js";
import { StdioClientTransport } from "@modelcontextprotocol/sdk/client/stdio.js";
import { z } from "zod";

Deno.test("MCP Client Test", async () => {
  // MCPサーバーを起動
  const serverProcess = new Deno.Command("imark", {
    args: ["mcp", "--debug"],
    stdin: "piped",
    stdout: "piped",
    stderr: "piped",
  }).spawn();

  // サーバーの起動を待つ
  await new Promise((resolve) => setTimeout(resolve, 1000));

  // MCPクライアントの設定
  const transport = new StdioClientTransport({
    process: serverProcess,
  });

  const client = new Client({
    name: "imark-test",
    version: "0.1.0",
  });

  await client.connect(transport);

  try {
    // captionツールのテスト
    const captionResult = await client.request(
      {
        method: "caption",
        params: {
          rootdir: Deno.cwd(),
          image: "./samples/matterhorn-sunset-swiss-alps-landscape-h.webp",
          lang: "ja",
        },
      },
      z.object({
        content: z.array(
          z.object({
            type: z.string(),
            text: z.string(),
          }),
        ),
      }),
    );
    console.log("Caption Result:", captionResult);

    // generateツールのテスト
    const generateResult = await client.request(
      {
        method: "generate",
        params: {
          rootdir: Deno.cwd(),
          theme: "A beautiful sunset",
          type: "realistic",
          size: "fullhd",
          aspectRatio: "16:9",
        },
      },
      z.object({
        content: z.array(
          z.object({
            type: z.string(),
            text: z.string(),
          }),
        ),
      }),
    );
    console.log("Generate Result:", generateResult);
  } finally {
    await client.close();
    serverProcess.kill();
  }
});
